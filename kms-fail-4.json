 {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "AWS": "*"
            },
            "Action": [
                "kms:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "AdministrativePermissionsForRolethatCreatedKey",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": [
                "kms:Update*",
                "kms:UntagResource",
                "kms:TagResource",
                "kms:SynchronizeMultiRegionKey",
                "kms:ScheduleKeyDeletion",
                "kms:ReplicateKey",
                "kms:PutKeyPolicy",
                "kms:List*",
                "kms:Get*",
                "kms:Enable*",
                "kms:Disable*",
                "kms:Describe*",
                "kms:DeleteAlias",
                "kms:CreateAlias",
                "kms:CancelKeyDeletion"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:PrincipalOrgID": "${orgid}",
                    "aws:PrincipalArn": "${principalarn}"
                }
            }
        },
        {
            "Sid": "RecoveryAndTDIRRolePermissions",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": [
                "kms:Update*",
                "kms:UntagResource",
                "kms:TagResource",
                "kms:SynchronizeMultiRegionKey",
                "kms:ScheduleKeyDeletion",
                "kms:ReplicateKey",
                "kms:PutKeyPolicy",
                "kms:List*",
                "kms:Get*",
                "kms:Enable*",
                "kms:Disable*",
                "kms:Describe*",
                "kms:DeleteAlias",
                "kms:CreateAlias",
                "kms:CancelKeyDeletion"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "kms:CallerAccount": "${accountid}",
                    "aws:PrincipalOrgID": "${orgid}",
                    "aws:PrincipalArn": [
                        "arn:${partition}:iam::${accountid}:role/recoveryrole",
                        "arn:${partition}:iam::${accountid}:role/incident-response-role"
                    ]
                }
            }
        },
        {
            "Sid": "lambdadecryptvariables",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": "kms:CreateGrant",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "kms:EncryptionContext:${partition}:lambda:FunctionArn": [
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-format-eventbridge-input",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-check-snapshots",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-create-streaming-instance",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-check-instance-managed",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-run-command-stream-snapshot-to-s3",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-wait-run-command",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-create-sidecar-volume-instance",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-run-command-stream-sidecar-volume-snapshot-to-ec2",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-prepare-and-attach-volume",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-run-command-stream-memory-capture-to-s3"
                    ],
                    "kms:GrantConstraintType": "EncryptionContextEquals",
                    "kms:ViaService": "lambda.${region}.amazonaws.com"
                },
                "ForAllValues:StringEquals": {
                    "kms:GrantOperations": [
                        "Decrypt",
                        "RetireGrant"
                    ]
                },
                "Bool": {
                    "kms:GrantIsForAWSResource": "true"
                }
            }
        },
        {
            "Sid": "pipelinevariablemanagement",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": [
                "kms:Encrypt",
                "kms:Decrypt"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "kms:EncryptionContext:${partition}:lambda:FunctionArn": [
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-format-eventbridge-input",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-check-snapshots",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-create-streaming-instance",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-check-instance-managed",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-run-command-stream-snapshot-to-s3",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-wait-run-command",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-create-sidecar-volume-instance",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-run-command-stream-sidecar-volume-snapshot-to-ec2",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-prepare-and-attach-volume",
                        "arn:${partition}:lambda:${region}:${accountid}:function:tdir-run-command-stream-memory-capture-to-s3"
                    ],
                    "aws:PrincipalArn": "arn:${partition}:iam::${accountid}:role/admin",
                    "kms:ViaService": "lambda.${region}.amazonaws.com"
                }
            }
        },
        {
            "Sid": "encryption-for-loggroups",
            "Effect": "Allow",
            "Principal": {
                "Service": "logs.${region}.amazonaws.com"
            },
            "Action": [
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Encrypt*",
                "kms:Describe*",
                "kms:Decrypt*"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "kms:EncryptionContext:${partition}:logs:arn": [
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/stepfunction/tdir",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-format-eventbridge",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-format-eventbridge-input",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-check-snapshots",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-create-streaming-instance",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-check-instance-managed",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-run-command-stream-snapshot-to-s3",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-wait-run-command",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-create-sidecar-volume-instance",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-run-command-stream-sidecar-volume-snapshot-to-ec2",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-prepare-and-attach-volume",
                        "arn:${partition}:logs:${region}:${accountid}:log-group:/aws/lambda/tdir-run-command-stream-memory-capture-to-s3"
                    ],
                    "aws:SourceOrgID": "${orgid}"
                }
            }
        },
        {
            "Sid": "ec2runinstances",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": "kms:GenerateDataKeyWithoutPlaintext",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:PrincipalArn": "arn:${partition}:iam::${accountid}:role/tdir-lambda",
                    "kms:ViaService": "ec2.${region}.amazonaws.com"
                }
            }
        },
        {
            "Sid": "ec2ebsdecrypt",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": "kms:CreateGrant",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "kms:GrantConstraintType": "EncryptionContextSubset",
                    "aws:PrincipalArn": "arn:${partition}:iam::${accountid}:role/tdir-lambda",
                    "kms:ViaService": "ec2.${region}.amazonaws.com"
                },
                "StringLike": {
                    "kms:EncryptionContext:${partition}:ebs:id": "vol-*"
                },
                "ForAllValues:StringEquals": {
                    "kms:GrantOperations": "Decrypt"
                },
                "Bool": {
                    "kms:GrantIsForAWSResource": "true"
                }
            }
        },
        {
            "Sid": "AllowMacietoDecryptheKey",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": [
                "kms:List*",
                "kms:GetKeyRotationStatus",
                "kms:GetKeyPolicy",
                "kms:Describe*",
                "kms:Decrypt"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:PrincipalArn": "arn:${partition}:iam::${accountid}:role/aws-service-role/macie.amazonaws.com/AWSServiceRoleForAmazonMacie"
                }
            }
        },
        {
            "Sid": "s3upload",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": [
                "kms:GenerateDataKey",
                "kms:Decrypt"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:PrincipalArn": "arn:${partition}:iam::${accountid}:role/tdir-ec2-collection",
                    "kms:EncryptionContext:${partition}:s3:arn": "arn:${partition}:s3:::tdir-${accountid}-${region}",
                    "kms:ViaService": "s3.${region}.amazonaws.com"
                }
            }
        },
        {
            "Sid": "s3download",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": "kms:Decrypt",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:PrincipalArn": "arn:${partition}:iam::${accountid}:role/admin",
                    "kms:EncryptionContext:${partition}:s3:arn": "arn:${partition}:s3:::tdir-${accountid}-${region}",
                    "kms:ViaService": "s3.${region}.amazonaws.com"
                }
            }
        },
        {
            "Sid": "AllowConfigandAccessAnalyzertoReadKeyAttributes",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:${partition}:iam::${accountid}:root"
            },
            "Action": [
                "kms:List*",
                "kms:GetKeyRotationStatus",
                "kms:GetKeyPolicy",
                "kms:Describe*"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "aws:PrincipalArn": [
                        "arn:${partition}:iam::${accountid}:role/aws-service-role/access-analyzer.amazonaws.com/AWSServiceRoleForAccessAnalyzer",
                        "arn:${partition}:iam::${accountid}:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig"
                    ]
                }
            }
        },
        {
            "Sid": "DenyNonOrganizationalServiceEncryptionUse",
            "Effect": "Deny",
            "Principal": {
                "AWS": "*"
            },
            "Action": "kms:*",
            "Resource": "*",
            "Condition": {
                "StringNotEqualsIfExists": {
                    "aws:SourceOrgID": "${orgid}"
                },
                "Null": {
                    "aws:SourceOrgID": "false"
                },
                "BoolIfExists": {
                    "aws:PrincipalIsAWSService": "true"
                }
            }
        },
        {
            "Sid": "PreventNonOrganizationalAccess",
            "Effect": "Deny",
            "Principal": {
                "AWS": "*"
            },
            "Action": "kms:*",
            "Resource": "*",
            "Condition": {
                "StringNotEqualsIfExists": {
                    "aws:PrincipalOrgID": "${orgid}"
                },
                "BoolIfExists": {
                    "aws:PrincipalIsAWSService": "false"
                }
            }
        },
        {
            "Sid": "MaxDeletionWindow",
            "Effect": "Deny",
            "Principal": {
                "AWS": "*"
            },
            "Action": "kms:ScheduleKeyDeletion",
            "Resource": "*",
            "Condition": {
                "NumericLessThan": {
                    "kms:ScheduleKeyDeletionPendingWindowInDays": "30"
                }
            }
        },
        {
            "Sid": "PreventSafetyLockoutBypass",
            "Effect": "Deny",
            "Principal": {
                "AWS": "*"
            },
            "Action": "kms:PutKeyPolicy",
            "Resource": "*",
            "Condition": {
                "Bool": {
                    "kms:BypassPolicyLockoutSafetyCheck": "true"
                }
            }
        }
    ]
}